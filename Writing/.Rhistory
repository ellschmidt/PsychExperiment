mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
model1 <- lm(rating_slider ~ intent * outcome, mydata)
summary(model1)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(model1)
my_variables <- mydata %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', 'rating_slider', 'rating_slider_actual', 'rating_slider_perceived') %>% select('intent', 'outcome', 'question_slider', 'rating')
library("tidyverse", lib.loc="~/R/win-library/3.5")
detach("package:tidyverse", unload=TRUE)
library("tidyverse", lib.loc="~/R/win-library/3.5")
mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
model1 <- lm(rating_slider ~ intent * outcome, mydata)
summary(model1)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(model1)
my_variables <- mydata %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', 'rating_slider', 'rating_slider_actual', 'rating_slider_perceived') %>% select('intent', 'outcome', 'question_slider', 'rating')
happy_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_devil_good
mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
model1 <- lm(rating_slider ~ intent * outcome, mydata)
summary(model1)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(model1)
my_variables <- mydata %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', 'rating_slider', 'rating_slider_actual', 'rating_slider_perceived') %>% select('intent', 'outcome', 'question_slider', 'rating')
happy_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider')
#happy_devil_good
#happy_angel_bad
#happy_angel_good
#perceived_devil_bad
#perceived_devil_good
#perceived_angel_bad
#perceived_angel_good
#actual_devil_bad
#actual_devil_good
#actual_angel_bad
#actual_angel_good
mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
model1 <- lm(rating_slider ~ intent * outcome, mydata)
summary(model1)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(model1)
my_variables <- mydata %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', 'rating_slider', 'rating_slider_actual', 'rating_slider_perceived') %>% select('intent', 'outcome', 'question_slider', 'rating')
happy_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider')
happy_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider')
perceived_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
perceived_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
actual_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_actual')
actual_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_actual')
aggregate(happy_devil_bad[, 4], mean)
aggregate(happy_devil_bad[, 4], list(d$Name), mean)
aggregate(happy_devil_bad[, 4], list(happy_devil_bad$Name), mean)
aggregate(happy_devil_bad[, 4], list(happy_devil_bad$intent), mean)
mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
model1 <- lm(rating_slider ~ intent * outcome, mydata)
summary(model1)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(model1)
my_variables <- mydata %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', 'rating_slider', 'rating_slider_actual', 'rating_slider_perceived') %>% select('intent', 'outcome', 'question_slider', 'rating')
happy_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider')
happy_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider')
perceived_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
perceived_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
actual_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_actual')
actual_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_actual')
mean_HapDevBad <- aggregate(happy_devil_bad[, 4], list(happy_devil_bad$intent), mean)
ggplot(data) +
geom_bar( aes(x=name, y=value), stat="identity", fill="skyblue", alpha=0.5) +
geom_linerange( aes(x=name, ymin=value-sd, ymax=value+sd), colour="orange", alpha=0.9, size=1.3)
sd_HapDevBad <- aggregate(happy_devil_bad[, 4], list(happy_devil_bad$intent), sd)
aggregate(my_variables[, 4], list(intent, outcome, question_slider), mean)
aggregate(my_variables[, 4], (intent, outcome, question_slider), mean)
aggregate(my_variables[, 4], list(my_variables$(intent, outcome, question_slider), mean)
aggregate(my_variables[, 4], list(my_variables$intent, outcome, question_slider), mean)
aggregate(my_variables[, 4], list(my_variables$intent$outcome$question_slider), mean)
aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, question_slider), mean)
aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
standard_deviation <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), sd)
View(means)
View(standard_deviation)
data <- data.frame(
name=letters[1:5],
value=sample(seq(4,15),5),
sd=c(1,0.2,3,2,4)
)
ggplot(data) +
geom_bar( aes(x=name, y=value), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=name, ymin=value-sd, ymax=value+sd), width=0.4, colour="orange", alpha=0.9, size=1.3)
ggplot(data) +
geom_bar( aes(x=name, y=value), stat="identity", fill="skyblue", alpha=0.5) +
geom_crossbar( aes(x=name, y=value, ymin=value-sd, ymax=value+sd), width=0.4, colour="orange", alpha=0.9, size=1.3)
ggplot(data) +
geom_bar( aes(x=name, y=value), stat="identity", fill="skyblue", alpha=0.5) +
geom_linerange( aes(x=name, ymin=value-sd, ymax=value+sd), colour="orange", alpha=0.9, size=1.3)
my_variables[1:3]
my_variables[1][3]
my_variables[1,3]
barplot(means, main="Happiness Assessment",
xlab="Intention", col=c("darkblue","red"),
legend = rownames(evil,angel), beside=TRUE)
barplot(means, main="Happiness Assessment",
xlab="intent", col=c("darkblue","red"),
legend = rownames(evil,angel), beside=TRUE)
ggplot(my_variables) +
geom_bar( aes(x=intent, y=rating, fill=outcome), stat="identity", position=position_dodge(), fill="skyblue", alpha=0.5)
ggplot(means) +
geom_bar( aes(x=intent, y=rating, fill=outcome), stat="identity", position=position_dodge(), fill="skyblue", alpha=0.5)
ggplot(means) +
geom_bar( aes(x=Group.1, y=x, fill=Group.2), stat="identity", position=position_dodge(), fill="skyblue", alpha=0.5)
dat1 <- data.frame(
sex = factor(c("Female","Female","Male","Male")),
time = factor(c("Lunch","Dinner","Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(13.53, 16.81, 16.24, 17.42)
)
View(dat1)
happiness_assessment <- subset(my_variables, question_slider == 'rating_slider')
perceived_life <- subset(my_variables, question_slider == 'rating_slider_perceived')
acttual_life <- subset(my_variables, question_slider == 'rating_slider_actual')
actual_life <- subset(my_variables, question_slider == 'rating_slider_actual')
happiness_assessment <- subset(means, question_slider == 'rating_slider')
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
rename(d, c("Group.1"="intent", "Group.2"="outcome", "Group.3"="question_slider", "x"="rating"))
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
rename(means, c("Group.1"="intent", "Group.2"="outcome", "Group.3"="question_slider", "x"="rating"))
rlang::last_error()
summary(rlang::last_error())
library("plyr", lib.loc="~/R/win-library/3.5")
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
rename(means, c("Group.1"="intent", "Group.2"="outcome", "Group.3"="question_slider", "x"="rating"))
happiness_assessment <- subset(means, question_slider == 'rating_slider')
View(means)
detach("package:plyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
library("plyr", lib.loc="~/R/win-library/3.5")
library("dplyr", lib.loc="~/R/win-library/3.5")
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
rename(means, c("Group.1"="intent", "Group.2"="outcome", "Group.3"="question_slider", "x"="rating"))
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
rename(means, intent=Group.1, outcome=Group.2, question_slider=Group.3, rating=x)
library('plyr')
library('dplyr')
library('tidyverse')
mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
model1 <- lm(rating_slider ~ intent * outcome, mydata)
summary(model1)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(model1)
my_variables <- mydata %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', 'rating_slider', 'rating_slider_actual', 'rating_slider_perceived') %>% select('intent', 'outcome', 'question_slider', 'rating')
happy_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider')
happy_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider')
perceived_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
perceived_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
actual_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_actual')
actual_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_actual')
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
rename(means, intent=Group.1, outcome=Group.2, question_slider=Group.3, rating=x)
library('plyr')
library('dplyr')
library('tidyverse')
mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
model1 <- lm(rating_slider ~ intent * outcome, mydata)
summary(model1)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(model1)
my_variables <- mydata %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', 'rating_slider', 'rating_slider_actual', 'rating_slider_perceived') %>% select('intent', 'outcome', 'question_slider', 'rating')
happy_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider')
happy_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider')
happy_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider')
perceived_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
perceived_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_perceived')
perceived_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_perceived')
actual_devil_bad <- subset(my_variables, intent == 'devil' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_devil_good <- subset(my_variables, intent == 'devil' & outcome == 'Good' & question_slider == 'rating_slider_actual')
actual_angel_bad <- subset(my_variables, intent == 'angel' & outcome == 'Bad' & question_slider == 'rating_slider_actual')
actual_angel_good <- subset(my_variables, intent == 'angel' & outcome == 'Good' & question_slider == 'rating_slider_actual')
means <- aggregate(my_variables[, 4], list(my_variables$intent, my_variables$outcome, my_variables$question_slider), mean)
rename(means, c("Group.1"="intent", "Group.2"="outcome", "Group.3"="question_slider", "x"="rating"))
library('tidyverse')
library('gridExtra')
library('brms')
library('BayesFactor')
library('boot')
library('bootstrap')
mydata <- read.csv("C:/Users/Schmidt/Desktop/PsychExperiment/Data/finals.csv")
cut_variables <- mydata %>% subset(RT <=20000)
# look upt the particpant's ids
cut_variables %>% select('submission_id', 'RT') %>% group_by(submission_id)
# take out these particpants
my_variables <- mydata %>% subset(submission_id != 188) %>% subset(submission_id != 111) %>% subset(submission_id != 97) %>% rename("Happiness Assessment" = rating_slider,
"Value of Actual Life" = rating_slider_actual,
"Value of Perceived Life" = rating_slider_perceived)
# count gender distribution
genders <- my_variables %>% group_by(gender) %>% summarize(x = n()/max(trial_number))
my_variables %>% group_by(education) %>% summarize(x = n()/max(trial_number))
#tidy up the data
tidy_variables <- my_variables %>% subset(!RT <=20000) %>% gather(key = 'question_slider', value = 'rating', "Happiness Assessment", "Value of Actual Life", "Value of Perceived Life") %>% select('intent', 'outcome', 'question_slider', 'rating')
#scale the data to be easily comparable to the original data
tidy_variables$rating <- tidy_variables$rating/100*7
#partitioning
happiness <- subset(tidy_variables, question_slider == "Happiness Assessment")
perceived <- subset(tidy_variables, question_slider == "Value of Perceived Life")
actual <- subset(tidy_variables, question_slider == "Value of Actual Life")
#creating the three linear models
model_happiness <- lm(rating ~ intent * outcome, happiness)
model_perceived <- lm(rating ~ intent * outcome, perceived)
model_actual <- lm(rating ~ intent * outcome, actual)
summary(model_happiness)
summary(model_perceived)
summary(model_actual)
#calculate the mean of the different ratings
calculations <- aggregate(tidy_variables[, 4], list(tidy_variables$intent, tidy_variables$outcome, tidy_variables$question_slider), mean)
#rename the columns correctly
calculations <- select(calculations, intent=Group.1, outcome=Group.2, question_slider=Group.3, means=x)
#calculate errorbars by bootstrapping the means and calculating the standard_deviation of those
data_list <- list(happiness, actual, perceived)
outcome_list <- list('Bad', 'Good')
intent_list <- list('angel', 'devil')
counter = 0
std_list <- list()
for(k in data_list){
for(i in outcome_list){
for(j in intent_list){
counter = counter + 1
boot_data <- subset(k, intent == j & outcome == i)
boot_data <- as.numeric(boot_data$rating)
standard_deviation <- sd(bootstrap(boot_data,10000,mean)[["thetastar"]])
std_list[[counter]] <- standard_deviation
}
}
}
std_list <- as.numeric(std_list)
calculations$std <- std_list
ggplot(calculations, aes(x = intent, y = means, fill = outcome)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar( aes(ymin=means-std, ymax=means+std), colour="orange", size=1.3, width=.2, position=position_dodge(width=0.9)) +
facet_grid(. ~ question_slider)
ggplot(tidy_variables, aes(x = intent, y = rating)) +
geom_violin() +
facet_grid(outcome ~ question_slider)
happiness_assessment <- calculations %>% subset(question_slider == "Happiness Assessment")
perceived_life <- calculations %>% subset(question_slider == "Value of Perceived Life")
actual_life <- calculations %>% subset(question_slider == "Value of Actual Life")
happy_intent_angel <- happiness_assessment %>% subset(intent == 'angel')
happy_intent_devil <- happiness_assessment %>% subset(intent == 'devil')
happy_outcome_good <- happiness_assessment %>% subset(outcome == 'Good')
happy_outcome_bad <- happiness_assessment %>% subset(outcome == 'Bad')
perceived_intent_angel <- perceived_life %>% subset(intent == 'angel')
perceived_intent_devil <- perceived_life %>% subset(intent == 'devil')
perceived_outcome_good <- perceived_life %>% subset(outcome == 'Good')
perceived_outcome_bad <- perceived_life %>% subset(outcome == 'Bad')
actual_intent_angel <- actual_life %>% subset(intent == 'angel')
actual_intent_devil <- actual_life %>% subset(intent == 'devil')
actual_outcome_good <- actual_life %>% subset(outcome == 'Good')
actual_outcome_bad <- actual_life %>% subset(outcome == 'Bad')
aligned = filter(tidy_variables,
(intent == "angel" & outcome == "Good") | (intent == "devil" & outcome == "Bad"),
question_slider == "Happiness Assessment") %>% pull(rating)
mismatch = filter(tidy_variables,
(intent == "angel" & outcome == "Bad") | (intent == "devil" & outcome == "Good"),
question_slider == "Happiness Assessment") %>% pull(rating)
t.test(aligned, mismatch, paired = F)
model_saturated = lm(rating ~ intent * outcome, data = actual)
model_noInteraction = lm(rating ~ intent + outcome, data = actual)
model_intention = lm(rating ~ intent, data = actual)
model_outcome = lm(rating ~ outcome, data = actual)
model_intercept = lm(rating ~ 1, data = actual)
AIC(
model_saturated,
model_noInteraction,
model_intention,
model_outcome,
model_intercept
)
bayes_fits = BayesFactor::generalTestBF(rating ~ intent * outcome, data = data.frame(actual))
plot(bayes_fits)
